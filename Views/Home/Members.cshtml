@model Tuple<int, IEnumerable<DocumentMember>, IEnumerable<Role>>

@{
    ViewData["Title"] = "Members";
}

<h2>Members</h2>

<div>
    <a asp-action="Document" asp-route-id="@Model.Item1">Back to document</a>
</div>

<div>
    <input type="text" id="userName" />
    <select id="roleSelect">
        @foreach (Role r in Model.Item3)
        {
            <option value="@r.Id">@r.Name</option>
        }
    </select>
    <input type="button" onclick="addMember()" />
</div>

<table class="table-condensed">
    <thead>
        <tr>
            <th>Name</th>
            <th>Role</th>
        </tr>
    </thead>
    <tbody id="membersTable">
    </tbody>
</table>

@section Scripts{
<script>
        function addMember() {
            var roleSelect = document.getElementById("roleSelect");
            $.ajax({
                url: "@Url.Action("AddMember", "Home")",
                type: "POST",
                data: {
                    documentId: @Model.Item1,
                    userName: document.getElementById("userName").value,
                    roleId: roleSelect.options[roleSelect.options.selectedIndex].value
                },
                success: function (data) {
                    if (data != undefined)
                        addMemberRow({ userName: data.user.userName, roleName: data.role.name });
                }
            });
        }

        $(function () {
            @foreach (var member in Model.Item2)
            {
                <text>addMemberRow({ userName: "@member.User.UserName", roleName: "@member.Role.Name" });</text>
            }
        });

        function addMemberRow(data) {
            $("#membersTable").append("<tr><td>" + data.userName +
                "</td><td>" + data.roleName +
                "</td><td><input type='button' value='Delete'></td></tr>");
        }
</script>
}
